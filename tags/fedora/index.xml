<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fedora on astolzen.github.io</title>
    <link>http://astolzen.github.i0/tags/fedora/</link>
    <description>Recent content in Fedora on astolzen.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <lastBuildDate>Tue, 16 Dec 2014 16:05:06 +0000</lastBuildDate>
    
	<atom:link href="http://astolzen.github.i0/tags/fedora/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Alle Pakete eines Repos entfernen</title>
      <link>http://astolzen.github.i0/post/2014pakete_entfernen/</link>
      <pubDate>Tue, 16 Dec 2014 16:05:06 +0000</pubDate>
      
      <guid>http://astolzen.github.i0/post/2014pakete_entfernen/</guid>
      <description>Alle Pakete eines bestimmten Channels oder Repositories lassen sich wie folgt entfernen:
yum remove $(yum list installed | grep ovirt | awk &#39;{ print $1 }&#39;)  Wobei ovirt hier für den Namen des Repostitries steht.</description>
    </item>
    
    <item>
      <title>Dummy Interface</title>
      <link>http://astolzen.github.i0/index.php/2014/12/08/dummy-interface/</link>
      <pubDate>Mon, 08 Dec 2014 15:49:30 +0000</pubDate>
      
      <guid>http://astolzen.github.i0/index.php/2014/12/08/dummy-interface/</guid>
      <description>Verschiedene Einsatzgebiete, wie unter anderem Offline-Demo-Setups von Cloud- und Virtualisierungsdiensten, erfordern ein Pseodo-Netzwerkinterface, auf das sich eine Bridge binden läßt. Der Linux Kernel unterstützt dazu das &amp;#8222;dummy&amp;#8220;-Interface. Allerdings generiert das System bei jedem Neustart ein neues Pseudo-Interface mit einer neuen MAC-Adresse, so dass die Netwerk-Konfiguration nach dem Reboot nicht mehr passt.
Abhilfe schafft ein kleinen Skript (in /etc/rc.local), welches beim Systemstart das Dummy-Interface erzeugt und ihm eine fixe MAC-Adresse zuweist:</description>
    </item>
    
    <item>
      <title>Hwclock adjust</title>
      <link>http://astolzen.github.i0/post/2014hwclock/</link>
      <pubDate>Wed, 12 Nov 2014 16:19:00 +0000</pubDate>
      
      <guid>http://astolzen.github.i0/post/2014hwclock/</guid>
      <description>Beim Setzen der Hardware-Uhr (auch in einer VM) schreibt hwclock ein &amp;#8222;adjust file&amp;#8220; welches die Differenz der Hardware-Uhr (UTC) zur Systemzeit (GMT+1) ablegt. Ist die Differenz zwischen System- und Hardware-Zeit nicht korrekt konfiguriert, wird der Server/VM nach einem Neustart in der Zeit um eines Stunde abweichen. Abhilfe schafft es dann, die hwclock auf die locale Zeit zu zwingen:
ntpdate ptbtime1.ptb.de hwclock -w --localtime  oder einfach zur Sicherheit das Adjust-File löschen</description>
    </item>
    
    <item>
      <title>Redhat / Fedora. Wlan ohne Network Manager konfigurieren</title>
      <link>http://astolzen.github.i0/post/2013wlan_ohnenm/</link>
      <pubDate>Wed, 16 Oct 2013 16:13:06 +0000</pubDate>
      
      <guid>http://astolzen.github.i0/post/2013wlan_ohnenm/</guid>
      <description>Es gibt eine ganze Reihe verschiedener Einsatzgebiete, in denen WLAN-Adapter unter Linux ohne GUI laufen müssen. Hier ist NetworkManager als Netzwerk-Daemon eher hinderlich &amp;#8212; in Servern schaltet man ihn ohnehin ab.
Die Einrichtung eines WLAN-Adapters auf der CLI funktioniert auch ohne NetworkManager recht simpel.
Namen des Wireless-Interfaces ermitteln: iwconfig
Listet alle Interfaces auf und zeigt diejenigen mit Wireless Extensions.
NetworkManager abschalten und deaktivieren. EL6:
service NetworkManager stop chkconfig NetworkManager off  Fedora19+ / RHEL7:</description>
    </item>
    
  </channel>
</rss>